# Stage 1: Build dependencies
FROM python:3.11-slim AS builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy and install requirements
COPY requirements.txt .
RUN pip install --no-cache-dir --prefix=/install -r requirements.txt

# Stage 2: Runtime
FROM python:3.11-slim

WORKDIR /app

# Install runtime dependencies only
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy installed packages from builder stage
COPY --from=builder /install /usr/local

# Create necessary directories
RUN mkdir -p ./data/pdf_templates ./data/generated_pdfs && \
    chmod -R 777 ./data

# Copy application code
COPY app/ ./app/

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Create a simple startup script
RUN echo '#!/bin/bash\n\
echo "Starting DocuMantis backend..."\n\
echo "Current directory: $(pwd)"\n\
echo "Python path: $PYTHONPATH"\n\
\n\
# Ensure data directories exist with proper permissions\n\
mkdir -p ./data/pdf_templates ./data/generated_pdfs\n\
chmod -R 777 ./data\n\
\n\
# Start the FastAPI server\n\
echo "Starting FastAPI server..."\n\
exec python -m uvicorn app.main:app --host 0.0.0.0 --port 8001 --log-level debug\n\
' > /app/entrypoint.sh && \
    chmod +x /app/entrypoint.sh

# Expose the port
EXPOSE 8001

# Use a simpler healthcheck that targets the FastAPI health endpoint
HEALTHCHECK --interval=10s --timeout=5s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:8001/health || exit 1

# Use the entrypoint script
ENTRYPOINT ["/app/entrypoint.sh"] 