version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: documantis-db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=documantis
      - POSTGRES_PASSWORD=${DB_PASSWORD:-documantis}
      - POSTGRES_DB=documantis
    restart: unless-stopped
    networks:
      - documantis-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U documantis"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend.prod
    container_name: documantis-backend
    ports:
      - "8001:8001"
    volumes:
      - ./data:/app/data
      - ./app:/app/app
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=documantis
      - DB_PASSWORD=${DB_PASSWORD:-documantis}
      - DB_NAME=documantis
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - documantis-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: documantis-frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - documantis-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80 || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  documantis-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

volumes:
  postgres-data:
    driver: local
